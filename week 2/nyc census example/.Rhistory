library(dplyr)
# Read in Data
nyc <- read.csv ("nyc_census.csv", header=TRUE)
(Visualization)
# Read in Data
nyc <- read.csv ("nyc_census.csv", header=TRUE)
loc <- read.csv ("census_tract_loc.csv", header=TRUE)
getwd()
(Visualization)
library(leaps)
library(glmnet)
library(pls)
library(tidyr)
library(ggplot2)
library(ggmap)
# Read in Data
nyc <- read.csv ("nyc_census.csv", header=TRUE)
library(dplyr)
getwd()
setwd("~/Documents/Teaching/Visualization Technologies/week 2")
# INITATE PACKAGES
library(leaps)
library(glmnet)
library(pls)
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggmap)
# READ IN CSV FILES
nyc <- read.csv ("nyc_census.csv", header=TRUE)
loc <- read.csv ("census_tract_loc.csv", header=TRUE)
View(loc)
View(loc)
View(nyc)
View(nyc)
View(nyc)
# READ IN CSV FILES
nyc <- read.csv ("nyc_census.csv", header=TRUE)
loc <- read.csv ("census_tract_loc.csv", header=TRUE)
summary(nyc)
# INITATE PACKAGES
library(leaps)
# INITATE PACKAGES
library(leaps)
(Visualization)
# INITATE PACKAGES
library(leaps)
library(glmnet)
library(pls)
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggmap)
# INITATE PACKAGES
library(leaps)
library(glmnet)
library(pls)
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggmap)
# READ IN CSV FILES
nyc <- read.csv ("nyc_census.csv", header=TRUE)
View(nyc)
# READ IN CSV FILES
nyc <- read.csv ("nyc_census.csv", header=TRUE)
loc <- read.csv ("census_tract_loc.csv", header=TRUE)
View(loc)
# READ IN CSV FILES
nyc <- read.csv ("nyc_census.csv", header=TRUE)
loc <- read.csv ("census_tract_loc.csv", header=TRUE)
summary(nyc)
loc <- read.csv ("census_tract_loc.csv", header=TRUE)
summary(nyc)
options(scipen = 999)
loc$BlockCode <- substr(loc$BlockCode, 0, 11)
# CLEAN DATA / REMOVE NA
nyc_census <- na.omit(nyc)
# CLEAN DATA / REMOVE NA
nyc_census <- na.omit(nyc)
# CLEAN DATA / REMOVE NA
nyc_census <- na.omit(nyc)
# CLEAN DATA / REMOVE NA
nyc_census <- na.omit(nyc)
# CLEAN DATA / REMOVE NA
nyc_census <- na.omit(nyc)
View(nyc_census)
# CLEAN DATA / REMOVE NA
nyc_census <- na.omit(nyc)
# SUMMARY STATISTICS
summary(nyc_census)
# MERGE DATA
merged <- merge(nyc_census, loc, by.x=("CensusTract"), by.y=("BlockCode"),all.x = TRUE)
View(merged)
View(merged)
summary(merged)
# CREATE GEO MAP
nyc_base <- ggmap::get_map("New York City", zoom = 10)
ggmap(nyc_base)
ggmap(nyc_base) + geom_point(aes(x=Longitude, y=Latitude,
colour=Income), data=merged) +
scale_colour_gradient(low = "pink", high = "red")
ggmap(nyc_base) + geom_point(aes(x=Longitude, y=Latitude,
colour=IncomePerCap), data=merged) +
scale_colour_gradient(low = "yellow", high = "violet")
boxplot(Income~County,data = nyc_census,
main="Boxplot of Income in Different Counties",
xlab="County",ylab="Income")
par(mfrow = c(2,1))
par(mfrow = c(2,1))
boxplot(nyc_census$Men~nyc_census$County)
boxplot(nyc_census$Women~nyc_census$County)
par(mfrow = c(2,1))
boxplot(nyc_census$Hispanic~nyc_census$County,ylab="Hispanic")
boxplot(nyc_census$White~nyc_census$County,ylab="White")
boxplot(nyc_census$Black~nyc_census$County,ylab="Black")
boxplot(nyc_census$Asian~nyc_census$County,ylab="Asian")
boxplot(nyc_census$Native~nyc_census$County,ylab="Native")
par(mfrow = c(2,1))
getwd()

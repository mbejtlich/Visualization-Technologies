library(dplyr)
install.packages("leaflet")
install.packages("rgdal")
install.packages("sf")
setwd("~/Documents/Teaching/Visualization Technologies/week 3/nyc spatial data example")
# STEP 2: Install and load "Leaflet for R".
library(leaflet)
# Step 3: Make sure Leaflet for R is working.
# (follow the example from the documentation)
m <- leaflet()
m <- addTiles(m)
m <- addMarkers(m, lng=174.768, lat=-36.852, popup="The birthplace of R")
m
View(m)
# Step 5: Open your data using rgdal.
# Here is the manual: https://cran.r-project.org/web/packages/rgdal/rgdal.pdf
library(rgdal)
myBoroughs <- readOGR("/Users/katek/Desktop/2022:9:26 (Viz Tech 1, Matt Bejtlich)/Borough Boundaries.geojson")
myBoroughs <- readOGR("Borough Boundaries.geojson")
View(myBoroughs)
View(m)
View(myBoroughs)
myBoroughs@polygons[[2]]@Polygons[[1]]@coords
myMarkers <- readOGR("NYPD Shooting Incident Data (Year To Date).geojson")
View(myMarkers)
myMarkers@coords
View(myMarkers@data)
dim(myMarkers@data)
# Step 6: View your data using leaflet.
myMap <- leaflet() %>%
addTiles() %>%
addPolygons(data = myBoroughs)
myMap
myMap <- leaflet() %>%
addTiles() %>%
addMarkers(data = myMarkers)
myMap
# Step 7: Join your data using sf.
# Here is the documentation: https://r-spatial.github.io/sf/articles/sf1.html
install.packages("sf")
library(sf)
# Step 7: Join your data using sf.
# Here is the documentation: https://r-spatial.github.io/sf/articles/sf1.html
library(sf)
# Step 7: Join your data using sf.
# Here is the documentation: https://r-spatial.github.io/sf/articles/sf1.html
install.packages("sf")
# Step 7: Join your data using sf.
# Here is the documentation: https://r-spatial.github.io/sf/articles/sf1.html
library(sf)
myMarkersSF <- st_as_sf(myMarkers)
myBoroughsSF <- st_as_sf(myBoroughs)
myJoined <- st_join(myMarkersSF, myBoroughsSF, join = st_within)
# Step 8: Calculate the density using sf and dplyr.
# Here is the documentation: https://dplyr.tidyverse.org/
library(dplyr)
myCount <- count(myJoined, boro)
myBoroughsSFCount <- st_join(myBoroughsSF, myCount)
myBoroughsSFCountDen <- mutate(myBoroughsSFCount, density= n / as.numeric(shape_area))
# Step 9: View the result.
myPalette <- colorNumeric( palette="viridis", domain=myBoroughsSFCountDen$density)
myMap <- leaflet() %>%
addTiles() %>%
addPolygons(data = myBoroughsSFCountDen,
fillColor = ~myPalette(density),
fillOpacity = 1)
myMap
